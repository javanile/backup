#!/usr/bin/env bash
# Author: Ambroise Maupate

source /run/crond.env
source /usr/local/lib/backup/env.sh

PGDUMP="$(which pg_dump)"
MYSQLDUMP="$(which mysqldump)"
TAR="$(which tar)"
SPLIT="$(which split)"
LFTP="$(which lftp)"
GZIP="$(which gzip)"
MKDIR="$(which mkdir)"
TAR_OPTIONS="-zcf"
SPLIT_OPTIONS="-b${CHUNK_SIZE}m"
## --column-statistics=0
SQL_OPTIONS="--defaults-extra-file=/etc/mysql/temp_db.cnf --no-tablespaces"
TMP_FOLDER=/tmp
TAR_FILE="${FILE_DATE}_files.tar.gz"
SQL_FILE="${FILE_DATE}_database.sql.gz"
LFTP_CMD="-u ${FTP_USER},${FTP_PASS} ${FTP_PROTO}://${FTP_HOST}:${FTP_PORT}"

echo "[`date '+%Y-%m-%d %H:%M:%S'`] =============================================================="
echo "[`date '+%Y-%m-%d %H:%M:%S'`] Beginning new backup on ${FTP_PROTO}://${FTP_HOST}:${FTP_PORT}"
echo "[`date '+%Y-%m-%d %H:%M:%S'`] FILE_DATE: ${FILE_DATE}"

# Test if connection is valid
${LFTP} -e "pwd;bye;" ${LFTP_CMD};
if [[ $? -ne 0 ]]; then
    echo "[`date '+%Y-%m-%d %H:%M:%S'`] Cannot connect to remote ${FTP_PROTO} account. Check credentials."
    exit 1;
fi

if [[ -n "$FTP_HOST" ]]; then
    # Create remote dir if does not exists
    echo "[`date '+%Y-%m-%d %H:%M:%S'`] Create remote dir if does not existsâ€¦"
    ${LFTP} ${LFTP_CMD} <<EOF
cache flush;
cd ${REMOTE_PATH} || mkdir ${REMOTE_PATH} || mkdir -p ${REMOTE_PATH};
bye;
EOF
fi

${LFTP} -e "cache flush;cd ${REMOTE_PATH};bye;" ${LFTP_CMD};
if [[ $? -ne 0 ]]; then
    echo "Remote path ${REMOTE_PATH} does not exist."
    exit 1;
fi

## Files
backup-files.sh

## MySQL dump
backup-mysql.sh

## PostgresSQL dump
backup-pgsql.sh

echo "[$(date '+%Y-%m-%d %H:%M:%S')] Backup finished"
